---
título: "Lección 2: Soluciones de marcos de datos"
archivo de salida: html_document
---

## Soluciones de Crear un marco de datos
Este documento contiene las soluciones de la actividad de crear un marco de datos. Puedes usar estas soluciones para controlar tu trabajo y asegurarte de que tu código sea correcto o resolver problemas en tu código si marca errores. Si aún no completaste la actividad, te sugerimos que regreses y la termines antes de leer las soluciones.

Si tienes errores, recuerda que puedes buscar ayuda en Internet y en la comunidad de RStudio:
https://community.rstudio.com/#

## Paso 1: Cargar paquetes
Comienza instalando el paquete requerido; en este caso, debes instalar `tidyverse`. Si ya instalaste y cargaste `tidyverse` en esta sesión, puedes saltearte los bloques de código en este paso.

```{r}
install.packages("tidyverse")
```
```{r}
library(tidyverse)
```

## Paso 2: Crear un marco de datos

A veces, necesitarás generar un marco de datos directamente en `R`. Existen diversas maneras de hacerlo; una de las más comunes es crear vectores de datos individuales y, luego, combinarlos en un marco de datos usando la función `data.frame()`.

Esto funciona de la siguiente manera. Primero, crea un vector de nombres:
```{r}
names <- c("Peter", "Jennifer", "Julie", "Alex")
```

Luego, crea un vector de edades:

```{r}
age <- c(15, 19, 21, 25)
```

Con estos dos vectores, puedes crear un nuevo marco de datos llamado `people`:
```{r}
people <- data.frame(names, age)
```

## Paso 3: Inspeccionar el marco de datos

Ahora que tienes este marco de datos, puedes usar algunas funciones diferentes para inspeccionarlo.

Una función común que puedes usar para previsualizar los datos es la función `head()`, que muestra las columnas y las primeras filas de datos. Puedes ver cómo funciona la función `head()` ejecutando el bloque que aparece a continuación:

```{r}
head(people)
```

Además de `head()`, existen otras funciones útiles para resumir o previsualizar tus datos. Por ejemplo, las funciones `str()` y `glimpse()` ofrecen resúmenes de cada columna en tus datos organizados horizontalmente. Puedes ver estas dos funciones en acción ejecutando los bloques de código que aparecen a continuación:

```{r}
str(people)
```

```{r}
glimpse(people)
```

También puedes usar `colnames()` para obtener una lista de los nombres de las columnas en tu conjunto de datos. Ejecuta el bloque de código que aparece debajo para ver esta función:

```{r}
colnames(people)
```

Ahora que tienes un marco de datos, puedes trabajar con él usando todas las herramientas en `R`. Por ejemplo, podrías usar mutate()` si quisieras crear una nueva variable que capte la edad de cada persona en 20 años. El bloque de código que aparece a continuación crea esa nueva variable:

```{r}
mutate(people, age_in_20 = age + 20)
```

## Paso 4: Inténtalo

Para familiarizarte más con la creación y el uso de marcos de datos, usa los bloques de código que aparecen debajo para crear tu propio marco de datos personalizado. 

Primero, crea un vector de cinco frutas diferentes. Puedes escribir directamente en el bloque de código que aparece debajo; simplemente coloca tu cursor en el cuadro y haz clic para escribir. Una vez que ingresaste las frutas que quieres en tu marco de datos, ejecuta el bloque de código.

```{r}
fruit <- c("Lemon", "Blueberry", "Grapefruit", "Mango", "Strawberry")
```

Ahora, crea un nuevo vector con un número que represente tu propia clasificación personal de cada fruta. Dale un 1 a la fruta que más te gusta y un 5 a la fruta que menos te gusta. Recuerda, las calificaciones deben tener el mismo orden que las frutas que están arriba. Entonces, si tu fruta favorita es la última en la lista de arriba, la calificación `1` debe estar en la última posición en la lista que aparece debajo. Una vez que ingreses tus clasificaciones, ejecuta el bloque de código.

```{r}
rank <- c(4, 2, 5, 3, 1)
```

Por último, combina los dos vectores en un marco de datos. Puedes llamarlo `fruit_ranks`. Edita el bloque de código y ejecútalo para crear tu marco de datos.

```{r}
fruit_ranks <- data.frame(fruit, rank)
```

Después de que ejecutes este bloque de código, creará un marco de datos con tus frutas y clasificaciones.